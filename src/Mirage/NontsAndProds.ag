include "AbstractSyntax.ag"

imports {
import           Data.Text                      ( Text )
import           Mirage.AbstractSyntax
}

attr Grammar Nonterminals Nonterminal
  syn nontsAndProds use {<>} {mempty} :: {[(Text, [Text])]}

attr Productions Production
  syn prods use {<>} {mempty} :: {[Text]}

sem Nonterminal
  | Nonterminal lhs.nontsAndProds = [(@name, @prods.prods)]

sem Production
  | Production lhs.prods = [@name]

{
nontsAndProds :: Grammar -> [(Text, [Text])]
nontsAndProds gram =
  nontsAndProds_Syn_Grammar $ wrap_Grammar (sem_Grammar gram) Inh_Grammar
}
